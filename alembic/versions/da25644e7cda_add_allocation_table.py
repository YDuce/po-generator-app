"""add allocation table

Revision ID: da25644e7cda
Revises: 0e372f80175a
Create Date: 2025-05-25 19:46:09.204594

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'da25644e7cda'
down_revision: Union[str, None] = '0e372f80175a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allocation',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('listing_id', sa.Integer(), sa.ForeignKey('listing.id'), nullable=False),
        sa.Column('channel_id', sa.Integer(), sa.ForeignKey('channel.id'), nullable=False),
        sa.Column('qty', sa.Integer(), nullable=False),
        sa.Column('priority', sa.Integer(), nullable=True),
        sa.Column('is_auto_allocated', sa.Boolean(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False)
    )
    op.drop_table('woot_batch')
    op.drop_table('woot_batch_line')
    op.alter_column('inventory_record', 'recorded_at',
               existing_type=sa.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.add_column('listing', sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False))
    op.add_column('listing', sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=True))
    op.alter_column('listing', 'external_sku',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('listing', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('product', 'cost')
    op.alter_column('sales_order', 'placed_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('sales_order', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sales_order', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('sales_order', 'placed_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.add_column('product', sa.Column('cost', sa.NUMERIC(), nullable=True))
    op.alter_column('product', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('listing', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('listing', 'external_sku',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('listing', 'cost')
    op.drop_column('listing', 'price')
    op.alter_column('inventory_record', 'recorded_at',
               existing_type=sa.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.create_table('woot_batch_line',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('batch_id', sa.INTEGER(), nullable=False),
    sa.Column('listing_id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['woot_batch.id'], ),
    sa.ForeignKeyConstraint(['listing_id'], ['listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('woot_batch',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('allocation')
    # ### end Alembic commands ###
